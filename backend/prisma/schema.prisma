generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Course {
  course_code String  @id @db.VarChar(20)
  course_name String? @db.VarChar(255)
}

model Notices {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  description String?   @db.Text
  created_at  DateTime? @default(now()) @db.Timestamp(0)
}

model Payment {
  registration_number Int     @id
  payment_status      String? @db.VarChar(10)
}

model Result {
  registration_number Int      @id
  marks               Decimal? @db.Decimal(5, 2)
  course_name         String?  @db.VarChar(255)
  CGPA                Decimal? @db.Decimal(3, 2)
}

model Staff {
  email    String  @id @db.VarChar(255)
  name     String? @db.VarChar(255)
  Password String? @db.VarChar(255)
}

model Enrolled {
  id                  Int     @id @default(autoincrement())
  registration_number String  @db.VarChar(255)
  email               String  @db.VarChar(255)
  session             String  @db.VarChar(255)
  name                String? @db.VarChar(255)
}

model Teacher {
  email       String  @id @db.VarChar(255)
  name        String? @db.VarChar(255)
  designation String? @db.VarChar(100)
  password    String? @db.VarChar(255)
}

model Student {
  id                  Int                  @id @default(autoincrement())
  registration_number String               @unique @db.VarChar(255)
  email               String               @db.VarChar(255)
  password            String               @db.VarChar(255)
  name                String?              @db.VarChar(255)
  completedCourses    CompletedCourse[]
  enrolledCourses     EnrolledCourse[]
}

model CompletedCourse {
  id         Int      @id @default(autoincrement())
  student    Student  @relation(fields: [studentId], references: [id])
  studentId  Int
  courseCode String   @db.VarChar(20)

  @@index([studentId])
}

model EnrolledCourse {
  id         Int      @id @default(autoincrement())
  student    Student  @relation(fields: [studentId], references: [id])
  studentId  Int
  courseCode String   @db.VarChar(20)

  @@index([studentId])
}

model ElectiveCourse {
  course_code        String           @id @db.VarChar(20)
  course_name        String?          @db.VarChar(255)
  currently_enrolled Int              @default(0)
  prerequisites      CoursePrerequisite[]
}

model CoursePrerequisite {
  id               Int             @id @default(autoincrement())
  course           ElectiveCourse  @relation(fields: [courseCode], references: [course_code])
  courseCode       String          @db.VarChar(20)
  prerequisiteCode String          @db.VarChar(20)

  @@index([courseCode])
}
